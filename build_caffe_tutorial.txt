tl;dr:
Install packages. Install GCC 6.4 instead of 7 to avoid having to build and install 6.4
Install CUDA 9 (or the correct OpenCL distribution if you have AMD GPU)
Config and Build SSD Caffe

Install the following packages:
sudo apt-get install libprotobuf-dev libleveldb-dev libsnappy-dev libopencv-dev libhdf5-serial-dev protobuf-compiler libboost-all-dev libatlas-base-dev python-dev python3-dev libgflags-dev libgoogle-glog-dev liblmdb-dev numpy gcc-6.4 bison curl flex g++-multilib gcc-multilib git gperf lib32ncurses5-dev lib32readline-dev lib32z1-dev libesd0-dev liblz4-tool libncurses5-dev libsdl1.2-dev libssl-dev libwxgtk3.0-dev libxml2-utils lzop pngcrush schedtool xsltproc python-skimage python-pip
sudo pip install protobuf

Install CUDA 9 (download from nvidia, nvidia-cuda-toolkit has version 8). This requires GCC 6.x (6.4), because GCC 5.3 will NOT work on Ubuntu 17.10 (and I presume 17.04): 
https://stackoverflow.com/questions/39130040/cmath-hides-isnan-in-math-h-in-c14-c11
http://docs.nvidia.com/cuda/cuda-installation-guide-linux/index.html#ubuntu-installation

Building SSD Caffe:
0) Now that gcc is installed, use update-alternatives to change the version of gcc and g++:
https://github.com/caffe2/caffe2/issues/442
sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-7 70
sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-7 70
sudo update-alternatives --install /usr/bin/gcc gcc /opt/gcc-6.4/bin/gcc 60
sudo update-alternatives --install /usr/bin/g++ g++ /opt/gcc-6.4/bin/g++ 60

1) Fix HDF5 serial error:
https://github.com/NVIDIA/DIGITS/issues/156

1a) Fix error of CUDA version in boost. Go to http://live.boost.org/doc/libs/1_65_1/boost/config/compiler/nvcc.hpp and paste the nvidia specific code to /usr/include/boost/config/compiler/nvcc.hpp

2) Make a copy of the Makefile.config.example, edit it, then run "make all -j8"
3) You will likely get an error about libmirclient and CXXABI_1.3.11. Switch back to gcc 7 with update-alternatives and then run it again, it should finish (my guess is due to incompatibility between the existing library object and GCC 6.4.0. So only use the latest supported OS, which is 17.04)
4) Switch back to GCC 6.4 and run "make py -j8"

OLD: Compiling GCC 6.4:(Takes about 30 min for an Intel Core i7 4700k)

1) Run configure correctly: Create a build folder outside gcc folder and run and build from there
https://ubuntuforums.org/showthread.php?t=2331026
Use this command: ../gcc-6.4.0/configure --enable-languages=c,c++ --prefix=/opt/gcc-6.4 --disable-libcilkrts --disable-libsanitizer --disable-checking

2) Fix compiler error due to ucontext: Replace two "struct ucontext" with "ucontext_t"
https://github.com/voidlinux/void-packages/issues/7284

3) The build should end successfully (a bunch of Leaving directory lines). Now run sudo make install

